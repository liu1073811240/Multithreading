# -- coding: utf-8 --
# @Time : 2022/7/29 14:49
# @Author : Liu Hui
# @Email : 1073811240@qq.com
# @File : 01-线程之间共享全局变量.py
# @Software: PyCharm

import threading
import time

# 1. 定义一个全局变量
g_num = 0

# 2. 定义2个函数，用它们来充当线程要执行的代码
def task1():
    global g_num
    g_num = 100
    print("在task1中, g_num=%d" % g_num)

def task2():
    print("在task2中, g_num=%d" % g_num)

# 3. 创建线程对象
t1 = threading.Thread(target=task1)
t2 = threading.Thread(target=task2)

# 4. 调用start创建线程，让线程开始运行。
t1.start()

time.sleep(2)  # 让主线程延时一会儿，保证让task1这个任务执行完毕。

t2.start()

'''
小结：
1. 如果一个程序有多个线程，每个线程可以单独执行自己的任务。
2. 如果多个线程之间需要数据共享，最简单的方式是，通过全局变量来实现。
其中一个线程修改全局变量，另外一个线程从全局变量中获取数据。

注意：
1. 通过全局变量可以解决多个线程之间共享数据的问题。但是如果使用不够切当，会导致数据错乱。
例如有3个线程:
其中第1、2个修改全局变量，第3个线程获取全局变量的值，可能会出现第1个线程刚刚将数据存放到了全局变量中，本意是想让
第3个线程获取它的数据，因为操作系统的调度原因导致了线程3没有被调度，而第2个线程被调度了，恰巧第2个线程也对全局变量进行了修改
当第3个线程去读取数据的时候，读取到的是第2个线程的数据而不是在第1个线程的数据。


'''

